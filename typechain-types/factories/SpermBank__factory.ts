/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SpermBank, SpermBankInterface } from "../SpermBank";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "DonorRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "donorAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donors",
    outputs: [
      {
        internalType: "address",
        name: "donorAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bloodType",
            type: "string",
          },
          {
            internalType: "bool",
            name: "hav",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hbv",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hcv",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "venerealDisease",
            type: "bool",
          },
        ],
        internalType: "struct SpermBank.BloodInfo",
        name: "bloodInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "semenVolume",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spermCount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "spermMotility",
            type: "string",
          },
          {
            internalType: "string",
            name: "spermShape",
            type: "string",
          },
        ],
        internalType: "struct SpermBank.SemenTestInfo",
        name: "semenTestInfo",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "mentalRetardation",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "mentalIllness",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "epilepsy",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "otherConditions",
                type: "string[]",
              },
            ],
            internalType: "struct SpermBank.MedicalHistory",
            name: "medicalHistory",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "drugUse",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "otherConditions",
                type: "string[]",
              },
            ],
            internalType: "struct SpermBank.PastHistory",
            name: "pastHistory",
            type: "tuple",
          },
          {
            internalType: "string[]",
            name: "geneticDisorders",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "relation",
                type: "string",
              },
              {
                internalType: "string",
                name: "condition",
                type: "string",
              },
            ],
            internalType: "struct SpermBank.FamilyHistory[]",
            name: "familyHistory",
            type: "tuple[]",
          },
        ],
        internalType: "struct SpermBank.InterviewInfo",
        name: "interviewInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "bodyType",
            type: "string",
          },
          {
            internalType: "string",
            name: "ethnicity",
            type: "string",
          },
          {
            internalType: "string",
            name: "personality",
            type: "string",
          },
          {
            internalType: "string",
            name: "education",
            type: "string",
          },
          {
            internalType: "string",
            name: "religion",
            type: "string",
          },
        ],
        internalType: "struct SpermBank.PhysicalInfo",
        name: "physicalInfo",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllDonors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "donorAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "age",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "bloodType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "hav",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "hbv",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "hcv",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "venerealDisease",
                type: "bool",
              },
            ],
            internalType: "struct SpermBank.BloodInfo",
            name: "bloodInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "semenVolume",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spermCount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "spermMotility",
                type: "string",
              },
              {
                internalType: "string",
                name: "spermShape",
                type: "string",
              },
            ],
            internalType: "struct SpermBank.SemenTestInfo",
            name: "semenTestInfo",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bool",
                    name: "mentalRetardation",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "mentalIllness",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "epilepsy",
                    type: "bool",
                  },
                  {
                    internalType: "string[]",
                    name: "otherConditions",
                    type: "string[]",
                  },
                ],
                internalType: "struct SpermBank.MedicalHistory",
                name: "medicalHistory",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "drugUse",
                    type: "bool",
                  },
                  {
                    internalType: "string[]",
                    name: "otherConditions",
                    type: "string[]",
                  },
                ],
                internalType: "struct SpermBank.PastHistory",
                name: "pastHistory",
                type: "tuple",
              },
              {
                internalType: "string[]",
                name: "geneticDisorders",
                type: "string[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "relation",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "condition",
                    type: "string",
                  },
                ],
                internalType: "struct SpermBank.FamilyHistory[]",
                name: "familyHistory",
                type: "tuple[]",
              },
            ],
            internalType: "struct SpermBank.InterviewInfo",
            name: "interviewInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "weight",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "bodyType",
                type: "string",
              },
              {
                internalType: "string",
                name: "ethnicity",
                type: "string",
              },
              {
                internalType: "string",
                name: "personality",
                type: "string",
              },
              {
                internalType: "string",
                name: "education",
                type: "string",
              },
              {
                internalType: "string",
                name: "religion",
                type: "string",
              },
            ],
            internalType: "struct SpermBank.PhysicalInfo",
            name: "physicalInfo",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isRegistered",
            type: "bool",
          },
        ],
        internalType: "struct SpermBank.Donor[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_donorAddress",
        type: "address",
      },
    ],
    name: "getDonorInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "donorAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "age",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "bloodType",
                type: "string",
              },
              {
                internalType: "bool",
                name: "hav",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "hbv",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "hcv",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "venerealDisease",
                type: "bool",
              },
            ],
            internalType: "struct SpermBank.BloodInfo",
            name: "bloodInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "semenVolume",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spermCount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "spermMotility",
                type: "string",
              },
              {
                internalType: "string",
                name: "spermShape",
                type: "string",
              },
            ],
            internalType: "struct SpermBank.SemenTestInfo",
            name: "semenTestInfo",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bool",
                    name: "mentalRetardation",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "mentalIllness",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "epilepsy",
                    type: "bool",
                  },
                  {
                    internalType: "string[]",
                    name: "otherConditions",
                    type: "string[]",
                  },
                ],
                internalType: "struct SpermBank.MedicalHistory",
                name: "medicalHistory",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "drugUse",
                    type: "bool",
                  },
                  {
                    internalType: "string[]",
                    name: "otherConditions",
                    type: "string[]",
                  },
                ],
                internalType: "struct SpermBank.PastHistory",
                name: "pastHistory",
                type: "tuple",
              },
              {
                internalType: "string[]",
                name: "geneticDisorders",
                type: "string[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "relation",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "condition",
                    type: "string",
                  },
                ],
                internalType: "struct SpermBank.FamilyHistory[]",
                name: "familyHistory",
                type: "tuple[]",
              },
            ],
            internalType: "struct SpermBank.InterviewInfo",
            name: "interviewInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "weight",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "bodyType",
                type: "string",
              },
              {
                internalType: "string",
                name: "ethnicity",
                type: "string",
              },
              {
                internalType: "string",
                name: "personality",
                type: "string",
              },
              {
                internalType: "string",
                name: "education",
                type: "string",
              },
              {
                internalType: "string",
                name: "religion",
                type: "string",
              },
            ],
            internalType: "struct SpermBank.PhysicalInfo",
            name: "physicalInfo",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isRegistered",
            type: "bool",
          },
        ],
        internalType: "struct SpermBank.Donor",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bloodType",
            type: "string",
          },
          {
            internalType: "bool",
            name: "hav",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hbv",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hcv",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "venerealDisease",
            type: "bool",
          },
        ],
        internalType: "struct SpermBank.BloodInfo",
        name: "_bloodInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "semenVolume",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spermCount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "spermMotility",
            type: "string",
          },
          {
            internalType: "string",
            name: "spermShape",
            type: "string",
          },
        ],
        internalType: "struct SpermBank.SemenTestInfo",
        name: "_semenTestInfo",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "mentalRetardation",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "mentalIllness",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "epilepsy",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "otherConditions",
                type: "string[]",
              },
            ],
            internalType: "struct SpermBank.MedicalHistory",
            name: "medicalHistory",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "drugUse",
                type: "bool",
              },
              {
                internalType: "string[]",
                name: "otherConditions",
                type: "string[]",
              },
            ],
            internalType: "struct SpermBank.PastHistory",
            name: "pastHistory",
            type: "tuple",
          },
          {
            internalType: "string[]",
            name: "geneticDisorders",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "relation",
                type: "string",
              },
              {
                internalType: "string",
                name: "condition",
                type: "string",
              },
            ],
            internalType: "struct SpermBank.FamilyHistory[]",
            name: "familyHistory",
            type: "tuple[]",
          },
        ],
        internalType: "struct SpermBank.InterviewInfo",
        name: "_interviewInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "bodyType",
            type: "string",
          },
          {
            internalType: "string",
            name: "ethnicity",
            type: "string",
          },
          {
            internalType: "string",
            name: "personality",
            type: "string",
          },
          {
            internalType: "string",
            name: "education",
            type: "string",
          },
          {
            internalType: "string",
            name: "religion",
            type: "string",
          },
        ],
        internalType: "struct SpermBank.PhysicalInfo",
        name: "_physicalInfo",
        type: "tuple",
      },
    ],
    name: "registerDonor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type SpermBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpermBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpermBank__factory extends ContractFactory {
  constructor(...args: SpermBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SpermBank & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SpermBank__factory {
    return super.connect(runner) as SpermBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpermBankInterface {
    return new Interface(_abi) as SpermBankInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SpermBank {
    return new Contract(address, _abi, runner) as unknown as SpermBank;
  }
}
